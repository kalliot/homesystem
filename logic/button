#!/usr/bin/env python

import json
import time
from datetime import datetime
from queue import Queue
import sys
import paho.mqtt.client as mqtt 
import RPi.GPIO as GPIO

sys.path.insert(1, '/home/pi/config')
from setup import mqtt_broker


button = 18
startts = 0
presslen = 0

GPIO.setmode(GPIO.BCM)
GPIO.setup(button,GPIO.IN)

def getserial():
  cpuserial = "0000000000000000"
  try:
    line = open('/sys/firmware/devicetree/base/serial-number','r').readlines()
    cpuserial = line[0]
    cpuserial = cpuserial.rstrip(cpuserial[-1])
  except:
    cpuserial = "ERROR000000000"
 
  return cpuserial


def my_callback(channel):
    global startts, presslen, serialnumber

    state = not GPIO.input(button)

    now = int(time.time())
    if state:
        startts = now
        presslen = 0
    else:
        presslen = now - startts    
    send_msg = {
            'id': 'button',
            'ts': now,
            'dev': serialnumber,
            'state': state,
            'presslen' : presslen
    }
    msgqueue.put(send_msg)


def sendData(data):
    global serialnumber

    msg = json.dumps(data)
    topic = mqtt_broker.topic_prefix + serialnumber+"/button"
    print(datetime.now(), "Sending")
    client.publish(topic, msg, qos=0)


def on_disconnect(client, userdata, rc):
    if rc!=7:
        client.reconnect()
    else:
        time.sleep(30)


GPIO.add_event_detect(button, GPIO.BOTH, callback=my_callback)

msgqueue = Queue(maxsize=5)    
serialnumber = getserial()

client = mqtt.Client("button handler" + serialnumber)
client.on_disconnect = on_disconnect

client.connect(mqtt_broker.address,port=mqtt_broker.port, keepalive=60) 
print(datetime.now(), "Start")
client.loop_start()


while True:
    try:
        data = msgqueue.get(block=True)
        if data is None:
            continue
        sendData(data)

    except KeyboardInterrupt:
        client.disconnect()
        client.loop_stop()
        exit(0)

    except:
        raise
